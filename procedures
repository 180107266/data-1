-----------------------------------------------------------------------------------------------regex for checking email format
ALTER TABLE users add constraint email_check CHECK(regexp_like(email, '.+@.+\..+'));
ALTER TABLE eco_users add constraint email_check CHECK(regexp_like(email, '.+@.+\..+'));
-----------------------------------------------------------------------------------------------inserting new user (registration)
CREATE OR REPLACE PROCEDURE insertUser
  (v_user_uid IN NUMBER,
   v_first_name IN VARCHAR2,
   v_last_name IN VARCHAR2,
   v_city IN VARCHAR2,
   v_contacts IN NUMBER,
   v_email IN VARCHAR2,
   v_password IN VARCHAR2,
   v_image IN BLOB) IS
BEGIN
    INSERT INTO eco_users (user_uid, first_name, last_name, city, CONTACT_NUMBER, email, password, profile_image)
    VALUES(
      v_user_uid,
      v_first_name,
      v_last_name,
      v_city,
      v_contacts,
      v_email,
      v_password,
      v_image);
END;
-----------------------------------------------------------------------------------------------drop existing sequence
CREATE OR REPLACE PROCEDURE reset_sequence(sequence IN VARCHAR2, value NUMBER) IS
  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE ' || sequence;
    EXECUTE IMMEDIATE 'CREATE SEQUENCE ' || sequence || ' start with ' || value || ' INCREMENT BY 1 START WITH 1 MINVALUE 1 MAXVALUE 1000 CYCLE CACHE 2';
  END;
-----------------------------------------------------------------------------------------------delete user from all tables
Suppose, we have to delete user with id = 10123
Tables, where user_uid can be found: eco_users, online_consultation, online_pcr;

CREATE OR REPLACE PROCEDURE DELETE_FROM_TABLES (arg_user_uid IN NUMBER) AS
  v_user_uid NUMBER(38);
  v_consultation_id NUMBER(5);
  v_pcr_id NUMBER(5);
CURSOR delete_user_data IS
      SELECT eco_users.user_uid, online_consultation.consultation_id, online_pcr.pcr_id FROM eco_users 
      JOIN online_consultation ON(eco_users.user_uid = online_consultation.user_uid) 
      JOIN online_pcr on(eco_users.user_uid = online_pcr.user_uid);  
BEGIN
  OPEN delete_user_data;
    LOOP
      FETCH delete_user_data INTO v_user_uid, v_consultation_id, v_pcr_id;
      EXIT WHEN delete_user_data%NOTFOUND;
      IF arg_user_uid = v_user_uid THEN
        DELETE FROM online_consultation WHERE v_consultation_id = arg_user_uid;
        DELETE FROM online_pcr WHERE v_pcr_id = arg_user_uid;
      END IF;
    END LOOP;
  CLOSE delete_user_data;
END;
-----------------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE insert_consultation
  (v_consultation_id IN NUMBER,
   v_user_uid IN NUMBER,
   v_doctor_id IN NUMBER,
   v_first_name IN VARCHAR2,
   v_last_name IN VARCHAR2,
   v_age in NUMBER,
   v_phone IN VARCHAR2,
   v_city IN VARCHAR2,
   v_doctor_name IN VARCHAR2,
   v_clinics IN VARCHAR2,
   v_consultation_date IN VARCHAR2) IS
BEGIN
    INSERT INTO online_consultation (
     consultation_id,
     user_uid,
     doctor_id,
     first_name,
     last_name,
     age,
     phone,
     city,
     doctor,
     clinics,
     consultation_date)
    VALUES(
       v_consultation_id,
       v_user_uid,
       v_doctor_id,
       v_first_name,
       v_last_name,
       v_age,
       v_phone,
       v_city,
       v_doctor_name,
       v_clinics,
       v_consultation_date);
END;
------------------------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE insert_pcr
  (v_pcr_id IN NUMBER,
   v_center_id IN NUMBER,
   v_user_uid IN NUMBER,
   v_first_name IN VARCHAR2,
   v_last_name IN VARCHAR2,
   v_city IN VARCHAR2,
   v_punkt IN VARCHAR2,
   v_pcr_date IN VARCHAR2) IS
BEGIN
    INSERT INTO online_pcr (
     pcr_id,
     center_id,
     user_uid,
     first_name,
     last_name,
     city,
     punkt,
     pcr_date)
    VALUES(
     v_pcr_id,
     v_center_id,
     v_user_uid,
     v_first_name,
     v_last_name,
     v_city,
     v_punkt,
     v_pcr_date);
END;
--------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE get_list_users IS 
  var_id NUMBER(5);
  var_operation_date DATE;
  var_old_id NUMBER(5);
  var_new_id NUMBER(5);
  var_old_email VARCHAR2(50);
  var_new_email VARCHAR2(50);
  var_action VARCHAR2(20);
  var_actionauthor VARCHAR2(20);

  CURSOR list_users_curs IS
    SELECT * FROM eco_users_log;
  list_users_rec list_users_curs%ROWTYPE;
BEGIN
     OPEN list_users_curs;
  loop
    FETCH list_users_curs INTO list_users_rec;
    EXIT WHEN list_users_curs%NOTFOUND;
    var_id := list_users_rec.id;
    var_operation_date := list_users_rec.operation_date;
    var_old_id := list_users_rec.old_id;
    var_new_id := list_users_rec.new_id;
    var_old_email := list_users_rec.old_email;
    var_new_email := list_users_rec.new_email;
    var_action := list_users_rec.action;
    var_actionauthor := list_users_rec.ACTIONAUTHOR;
  end loop;
END get_list_users;
---------------------------------------------------------------------------------------------------------------

